/*
 * Conjur
 * This is an API definition for CyberArk Conjur Open Source. You can find out more at [Conjur.org](https://www.conjur.org/).
 *
 * The version of the OpenAPI document: 5.3.0
 * Contact: conj_maintainers@cyberark.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.conjur.sdk.api;

import org.conjur.sdk.model.CreateHost;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for HostFactoryApi
 */
@Ignore
public class HostFactoryApiTest {

    private final HostFactoryApi api = new HostFactoryApi();

    
    /**
     * Creates a Host using the Host Factory.
     *
     * Creates a Host using the Host Factory and returns a JSON description of it.  Requires a host factory token, which can be created using the create tokens API. In practice, this token is usually provided automatically as part of Conjur integration with your host provisioning infrastructure.  Note: If the token was created with a CIDR restriction, you must make this API request from a whitelisted address. 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createHostTest() {
        String id = null;
        String xRequestId = null;
        Object annotations = null;
        CreateHost response = api.createHost(id, xRequestId, annotations);

        // TODO: test validations
    }
    
    /**
     * Creates one or more host identity tokens.
     *
     * Creates one or more tokens which can be used to bootstrap host identity. Responds with a JSON document containing the tokens and their restrictions.  If the tokens are created with a CIDR restriction, Conjur will only accept them from the whitelisted IP ranges.  ##### Permissions required # &#x60;execute&#x60; privilege on the Host Factory.\&quot; 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createTokenTest() {
        String expiration = null;
        String hostFactory = null;
        String xRequestId = null;
        List<String> cidr = null;
        Integer count = null;
        List<Object> response = api.createToken(expiration, hostFactory, xRequestId, cidr, count);

        // TODO: test validations
    }
    
    /**
     * Revokes a token, immediately disabling it.
     *
     * Revokes a token, immediately disabling it.  ##### Permissions required  &#x60;update&#x60; privilege on the host factory.\&quot; 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void revokeTokenTest() {
        String token = null;
        String xRequestId = null;
        api.revokeToken(token, xRequestId);

        // TODO: test validations
    }
    
}
